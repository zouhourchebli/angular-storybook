{"version":3,"file":"store-devtools.umd.js","sources":["../../../../../modules/store-devtools/src/config.ts","../../../../../modules/store-devtools/src/actions.ts","../../../../../modules/store-devtools/src/devtools-dispatcher.ts","../../../../../modules/store-devtools/src/utils.ts","../../../../../modules/store-devtools/src/extension.ts","../../../../../modules/store-devtools/src/reducer.ts","../../../../../modules/store-devtools/src/devtools.ts","../../../../../modules/store-devtools/src/instrument.ts","../../../../../modules/store-devtools/index.ts","../../../../../modules/store-devtools/store-devtools.ts"],"names":["InjectionToken","__extends","Injectable","ActionsSubject","Actions.PerformAction","empty","Observable","share","filter","map","concatMap","UPDATE","timeout","debounceTime","catchError","of","take","takeUntil","switchMap","__param","Inject","INIT","DevtoolsActions.LOCK_CHANGES","DevtoolsActions.PAUSE_RECORDING","DevtoolsActions.RESET","DevtoolsActions.COMMIT","DevtoolsActions.ROLLBACK","DevtoolsActions.TOGGLE_ACTION","DevtoolsActions.SET_ACTIONS_ACTIVE","DevtoolsActions.JUMP_TO_STATE","DevtoolsActions.JUMP_TO_ACTION","DevtoolsActions.SWEEP","DevtoolsActions.PERFORM_ACTION","DevtoolsActions.IMPORT_STATE","merge","skip","observeOn","queueScheduler","ReplaySubject","withLatestFrom","scan","Actions.PERFORM_ACTION","Actions.Refresh","Actions.Reset","Actions.Rollback","Actions.Commit","Actions.Sweep","Actions.ToggleAction","Actions.JumpToAction","Actions.JumpToState","Actions.ImportState","Actions.LockChanges","Actions.PauseRecording","INITIAL_STATE","ReducerObservable","ScannedActionsSubject","ErrorHandler","StateObservable","ReducerManagerDispatcher","NgModule"],"mappings":"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","sourcesContent":["import { ActionReducer, Action } from '@ngrx/store';\nimport { InjectionToken } from '@angular/core';\n\nexport type ActionSanitizer = (action: Action, id: number) => Action;\nexport type StateSanitizer = (state: any, index: number) => any;\nexport type SerializationOptions = {\n  options?: boolean | any;\n  replacer?: (key: any, value: any) => {};\n  reviver?: (key: any, value: any) => {};\n  immutable?: any;\n  refs?: Array<any>;\n};\nexport type Predicate = (state: any, action: Action) => boolean;\nexport interface DevToolsFeatureOptions {\n  pause?: boolean;\n  lock?: boolean;\n  persist?: boolean;\n  export?: boolean;\n  import?: 'custom' | boolean;\n  jump?: boolean;\n  skip?: boolean;\n  reorder?: boolean;\n  dispatch?: boolean;\n  test?: boolean;\n}\n\nexport class StoreDevtoolsConfig {\n  maxAge: number | false = false;\n  monitor?: ActionReducer<any, any>;\n  actionSanitizer?: ActionSanitizer;\n  stateSanitizer?: StateSanitizer;\n  name?: string;\n  serialize?: boolean | SerializationOptions;\n  logOnly?: boolean;\n  features?: DevToolsFeatureOptions;\n  actionsBlocklist?: string[];\n  actionsSafelist?: string[];\n  predicate?: Predicate;\n}\n\nexport const STORE_DEVTOOLS_CONFIG = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/devtools Options'\n);\nexport const INITIAL_OPTIONS = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/devtools Initial Config'\n);\n\nexport type StoreDevtoolsOptions =\n  | Partial<StoreDevtoolsConfig>\n  | (() => Partial<StoreDevtoolsConfig>);\n\nexport function noMonitor(): null {\n  return null;\n}\n\nexport const DEFAULT_NAME = 'NgRx Store DevTools';\n\nexport function createConfig(\n  _options: StoreDevtoolsOptions\n): StoreDevtoolsConfig {\n  const DEFAULT_OPTIONS: StoreDevtoolsConfig = {\n    maxAge: false,\n    monitor: noMonitor,\n    actionSanitizer: undefined,\n    stateSanitizer: undefined,\n    name: DEFAULT_NAME,\n    serialize: false,\n    logOnly: false,\n    // Add all features explicitly. This prevent buggy behavior for\n    // options like \"lock\" which might otherwise not show up.\n    features: {\n      pause: true, // start/pause recording of dispatched actions\n      lock: true, // lock/unlock dispatching actions and side effects\n      persist: true, // persist states on page reloading\n      export: true, // export history of actions in a file\n      import: 'custom', // import history of actions from a file\n      jump: true, // jump back and forth (time travelling)\n      skip: true, // skip (cancel) actions\n      reorder: true, // drag and drop actions in the history list\n      dispatch: true, // dispatch custom actions or action creators\n      test: true, // generate tests for the selected actions\n    },\n  };\n\n  let options = typeof _options === 'function' ? _options() : _options;\n  const logOnly = options.logOnly\n    ? { pause: true, export: true, test: true }\n    : false;\n  const features = options.features || logOnly || DEFAULT_OPTIONS.features;\n  const config = Object.assign({}, DEFAULT_OPTIONS, { features }, options);\n\n  if (config.maxAge && config.maxAge < 2) {\n    throw new Error(\n      `Devtools 'maxAge' cannot be less than 2, got ${config.maxAge}`\n    );\n  }\n\n  return config;\n}\n","import { Action } from '@ngrx/store';\n\nexport const PERFORM_ACTION = 'PERFORM_ACTION';\nexport const REFRESH = 'REFRESH';\nexport const RESET = 'RESET';\nexport const ROLLBACK = 'ROLLBACK';\nexport const COMMIT = 'COMMIT';\nexport const SWEEP = 'SWEEP';\nexport const TOGGLE_ACTION = 'TOGGLE_ACTION';\nexport const SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\nexport const JUMP_TO_STATE = 'JUMP_TO_STATE';\nexport const JUMP_TO_ACTION = 'JUMP_TO_ACTION';\nexport const IMPORT_STATE = 'IMPORT_STATE';\nexport const LOCK_CHANGES = 'LOCK_CHANGES';\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\n\nexport class PerformAction implements Action {\n  readonly type = PERFORM_ACTION;\n\n  constructor(public action: Action, public timestamp: number) {\n    if (typeof action.type === 'undefined') {\n      throw new Error(\n        'Actions may not have an undefined \"type\" property. ' +\n          'Have you misspelled a constant?'\n      );\n    }\n  }\n}\n\nexport class Refresh implements Action {\n  readonly type = REFRESH;\n}\n\nexport class Reset implements Action {\n  readonly type = RESET;\n\n  constructor(public timestamp: number) {}\n}\n\nexport class Rollback implements Action {\n  readonly type = ROLLBACK;\n\n  constructor(public timestamp: number) {}\n}\n\nexport class Commit implements Action {\n  readonly type = COMMIT;\n\n  constructor(public timestamp: number) {}\n}\n\nexport class Sweep implements Action {\n  readonly type = SWEEP;\n}\n\nexport class ToggleAction implements Action {\n  readonly type = TOGGLE_ACTION;\n\n  constructor(public id: number) {}\n}\n\nexport class SetActionsActive implements Action {\n  readonly type = SET_ACTIONS_ACTIVE;\n\n  constructor(\n    public start: number,\n    public end: number,\n    public active: boolean = true\n  ) {}\n}\n\nexport class JumpToState implements Action {\n  readonly type = JUMP_TO_STATE;\n\n  constructor(public index: number) {}\n}\n\nexport class JumpToAction implements Action {\n  readonly type = JUMP_TO_ACTION;\n\n  constructor(public actionId: number) {}\n}\n\nexport class ImportState implements Action {\n  readonly type = IMPORT_STATE;\n\n  constructor(public nextLiftedState: any) {}\n}\n\nexport class LockChanges implements Action {\n  readonly type = LOCK_CHANGES;\n\n  constructor(public status: boolean) {}\n}\n\nexport class PauseRecording implements Action {\n  readonly type = PAUSE_RECORDING;\n\n  constructor(public status: boolean) {}\n}\n\nexport type All =\n  | PerformAction\n  | Refresh\n  | Reset\n  | Rollback\n  | Commit\n  | Sweep\n  | ToggleAction\n  | SetActionsActive\n  | JumpToState\n  | JumpToAction\n  | ImportState\n  | LockChanges\n  | PauseRecording;\n","import { ActionsSubject } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DevtoolsDispatcher extends ActionsSubject {}\n","import { Action } from '@ngrx/store';\n\nimport * as Actions from './actions';\nimport {\n  ActionSanitizer,\n  StateSanitizer,\n  Predicate,\n  StoreDevtoolsConfig,\n} from './config';\nimport {\n  ComputedState,\n  LiftedAction,\n  LiftedActions,\n  LiftedState,\n} from './reducer';\n\nexport function difference(first: any[], second: any[]) {\n  return first.filter(item => second.indexOf(item) < 0);\n}\n\n/**\n * Provides an app's view into the state of the lifted store.\n */\nexport function unliftState(liftedState: LiftedState) {\n  const { computedStates, currentStateIndex } = liftedState;\n\n  // At start up NgRx dispatches init actions,\n  // When these init actions are being filtered out by the predicate or safe/block list options\n  // we don't have a complete computed states yet.\n  // At this point it could happen that we're out of bounds, when this happens we fall back to the last known state\n  if (currentStateIndex >= computedStates.length) {\n    const { state } = computedStates[computedStates.length - 1];\n    return state;\n  }\n\n  const { state } = computedStates[currentStateIndex];\n  return state;\n}\n\nexport function unliftAction(liftedState: LiftedState): LiftedAction {\n  return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n\n/**\n * Lifts an app's action into an action on the lifted store.\n */\nexport function liftAction(action: Action) {\n  return new Actions.PerformAction(action, +Date.now());\n}\n\n/**\n * Sanitizes given actions with given function.\n */\nexport function sanitizeActions(\n  actionSanitizer: ActionSanitizer,\n  actions: LiftedActions\n): LiftedActions {\n  return Object.keys(actions).reduce(\n    (sanitizedActions, actionIdx) => {\n      const idx = Number(actionIdx);\n      sanitizedActions[idx] = sanitizeAction(\n        actionSanitizer,\n        actions[idx],\n        idx\n      );\n      return sanitizedActions;\n    },\n    <LiftedActions>{}\n  );\n}\n\n/**\n * Sanitizes given action with given function.\n */\nexport function sanitizeAction(\n  actionSanitizer: ActionSanitizer,\n  action: LiftedAction,\n  actionIdx: number\n): LiftedAction {\n  return {\n    ...action,\n    action: actionSanitizer(action.action, actionIdx),\n  };\n}\n\n/**\n * Sanitizes given states with given function.\n */\nexport function sanitizeStates(\n  stateSanitizer: StateSanitizer,\n  states: ComputedState[]\n): ComputedState[] {\n  return states.map((computedState, idx) => ({\n    state: sanitizeState(stateSanitizer, computedState.state, idx),\n    error: computedState.error,\n  }));\n}\n\n/**\n * Sanitizes given state with given function.\n */\nexport function sanitizeState(\n  stateSanitizer: StateSanitizer,\n  state: any,\n  stateIdx: number\n) {\n  return stateSanitizer(state, stateIdx);\n}\n\n/**\n * Read the config and tell if actions should be filtered\n */\nexport function shouldFilterActions(config: StoreDevtoolsConfig) {\n  return config.predicate || config.actionsSafelist || config.actionsBlocklist;\n}\n\n/**\n * Return a full filtered lifted state\n */\nexport function filterLiftedState(\n  liftedState: LiftedState,\n  predicate?: Predicate,\n  safelist?: string[],\n  blocklist?: string[]\n): LiftedState {\n  const filteredStagedActionIds: number[] = [];\n  const filteredActionsById: LiftedActions = {};\n  const filteredComputedStates: ComputedState[] = [];\n  liftedState.stagedActionIds.forEach((id, idx) => {\n    const liftedAction = liftedState.actionsById[id];\n    if (!liftedAction) return;\n    if (\n      idx &&\n      isActionFiltered(\n        liftedState.computedStates[idx],\n        liftedAction,\n        predicate,\n        safelist,\n        blocklist\n      )\n    ) {\n      return;\n    }\n    filteredActionsById[id] = liftedAction;\n    filteredStagedActionIds.push(id);\n    filteredComputedStates.push(liftedState.computedStates[idx]);\n  });\n  return {\n    ...liftedState,\n    stagedActionIds: filteredStagedActionIds,\n    actionsById: filteredActionsById,\n    computedStates: filteredComputedStates,\n  };\n}\n\n/**\n * Return true is the action should be ignored\n */\nexport function isActionFiltered(\n  state: any,\n  action: LiftedAction,\n  predicate?: Predicate,\n  safelist?: string[],\n  blockedlist?: string[]\n) {\n  const predicateMatch = predicate && !predicate(state, action.action);\n  const safelistMatch =\n    safelist &&\n    !action.action.type.match(safelist.map(s => escapeRegExp(s)).join('|'));\n  const blocklistMatch =\n    blockedlist &&\n    action.action.type.match(blockedlist.map(s => escapeRegExp(s)).join('|'));\n  return predicateMatch || safelistMatch || blocklistMatch;\n}\n\n/**\n * Return string with escaped RegExp special characters\n * https://stackoverflow.com/a/6969486/1337347\n */\nfunction escapeRegExp(s: string): string {\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Action, UPDATE } from '@ngrx/store';\nimport { empty, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  debounceTime,\n  filter,\n  map,\n  share,\n  switchMap,\n  take,\n  takeUntil,\n  timeout,\n} from 'rxjs/operators';\n\nimport { IMPORT_STATE, PERFORM_ACTION } from './actions';\nimport {\n  SerializationOptions,\n  STORE_DEVTOOLS_CONFIG,\n  StoreDevtoolsConfig,\n} from './config';\nimport { DevtoolsDispatcher } from './devtools-dispatcher';\nimport { LiftedAction, LiftedState } from './reducer';\nimport {\n  isActionFiltered,\n  sanitizeAction,\n  sanitizeActions,\n  sanitizeState,\n  sanitizeStates,\n  shouldFilterActions,\n  unliftState,\n} from './utils';\n\nexport const ExtensionActionTypes = {\n  START: 'START',\n  DISPATCH: 'DISPATCH',\n  STOP: 'STOP',\n  ACTION: 'ACTION',\n};\n\nexport const REDUX_DEVTOOLS_EXTENSION = new InjectionToken<\n  ReduxDevtoolsExtension\n>('Redux Devtools Extension');\n\nexport interface ReduxDevtoolsExtensionConnection {\n  subscribe(listener: (change: any) => void): void;\n  unsubscribe(): void;\n  send(action: any, state: any): void;\n  init(state?: any): void;\n  error(anyErr: any): void;\n}\nexport interface ReduxDevtoolsExtensionConfig {\n  features?: object | boolean;\n  name: string | undefined;\n  maxAge?: number;\n  serialize?: boolean | SerializationOptions;\n}\n\nexport interface ReduxDevtoolsExtension {\n  connect(\n    options: ReduxDevtoolsExtensionConfig\n  ): ReduxDevtoolsExtensionConnection;\n  send(action: any, state: any, options: ReduxDevtoolsExtensionConfig): void;\n}\n\n@Injectable()\nexport class DevtoolsExtension {\n  private devtoolsExtension: ReduxDevtoolsExtension;\n  private extensionConnection!: ReduxDevtoolsExtensionConnection;\n\n  liftedActions$!: Observable<any>;\n  actions$!: Observable<any>;\n  start$!: Observable<any>;\n\n  constructor(\n    @Inject(REDUX_DEVTOOLS_EXTENSION) devtoolsExtension: ReduxDevtoolsExtension,\n    @Inject(STORE_DEVTOOLS_CONFIG) private config: StoreDevtoolsConfig,\n    private dispatcher: DevtoolsDispatcher\n  ) {\n    this.devtoolsExtension = devtoolsExtension;\n    this.createActionStreams();\n  }\n\n  notify(action: LiftedAction, state: LiftedState) {\n    if (!this.devtoolsExtension) {\n      return;\n    }\n    // Check to see if the action requires a full update of the liftedState.\n    // If it is a simple action generated by the user's app and the recording\n    // is not locked/paused, only send the action and the current state (fast).\n    //\n    // A full liftedState update (slow: serializes the entire liftedState) is\n    // only required when:\n    //   a) redux-devtools-extension fires the @@Init action (ignored by\n    //      @ngrx/store-devtools)\n    //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n    //      or @ngrx/store/update-reducers)\n    //   c) the state has been recomputed due to time-traveling\n    //   d) any action that is not a PerformAction to err on the side of\n    //      caution.\n    if (action.type === PERFORM_ACTION) {\n      if (state.isLocked || state.isPaused) {\n        return;\n      }\n\n      const currentState = unliftState(state);\n      if (\n        shouldFilterActions(this.config) &&\n        isActionFiltered(\n          currentState,\n          action,\n          this.config.predicate,\n          this.config.actionsSafelist,\n          this.config.actionsBlocklist\n        )\n      ) {\n        return;\n      }\n      const sanitizedState = this.config.stateSanitizer\n        ? sanitizeState(\n            this.config.stateSanitizer,\n            currentState,\n            state.currentStateIndex\n          )\n        : currentState;\n      const sanitizedAction = this.config.actionSanitizer\n        ? sanitizeAction(\n            this.config.actionSanitizer,\n            action,\n            state.nextActionId\n          )\n        : action;\n\n      this.sendToReduxDevtools(() =>\n        this.extensionConnection.send(sanitizedAction, sanitizedState)\n      );\n    } else {\n      // Requires full state update\n      const sanitizedLiftedState = {\n        ...state,\n        stagedActionIds: state.stagedActionIds,\n        actionsById: this.config.actionSanitizer\n          ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n          : state.actionsById,\n        computedStates: this.config.stateSanitizer\n          ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n          : state.computedStates,\n      };\n\n      this.sendToReduxDevtools(() =>\n        this.devtoolsExtension.send(\n          null,\n          sanitizedLiftedState,\n          this.getExtensionConfig(this.config)\n        )\n      );\n    }\n  }\n\n  private createChangesObservable(): Observable<any> {\n    if (!this.devtoolsExtension) {\n      return empty();\n    }\n\n    return new Observable(subscriber => {\n      const connection = this.devtoolsExtension.connect(\n        this.getExtensionConfig(this.config)\n      );\n      this.extensionConnection = connection;\n      connection.init();\n\n      connection.subscribe((change: any) => subscriber.next(change));\n      return connection.unsubscribe;\n    });\n  }\n\n  private createActionStreams() {\n    // Listens to all changes\n    const changes$ = this.createChangesObservable().pipe(share());\n\n    // Listen for the start action\n    const start$ = changes$.pipe(\n      filter((change: any) => change.type === ExtensionActionTypes.START)\n    );\n\n    // Listen for the stop action\n    const stop$ = changes$.pipe(\n      filter((change: any) => change.type === ExtensionActionTypes.STOP)\n    );\n\n    // Listen for lifted actions\n    const liftedActions$ = changes$.pipe(\n      filter(change => change.type === ExtensionActionTypes.DISPATCH),\n      map(change => this.unwrapAction(change.payload)),\n      concatMap((action: any) => {\n        if (action.type === IMPORT_STATE) {\n          // State imports may happen in two situations:\n          // 1. Explicitly by user\n          // 2. User activated the \"persist state accross reloads\" option\n          //    and now the state is imported during reload.\n          // Because of option 2, we need to give possible\n          // lazy loaded reducers time to instantiate.\n          // As soon as there is no UPDATE action within 1 second,\n          // it is assumed that all reducers are loaded.\n          return this.dispatcher.pipe(\n            filter(action => action.type === UPDATE),\n            timeout(1000),\n            debounceTime(1000),\n            map(() => action),\n            catchError(() => of(action)),\n            take(1)\n          );\n        } else {\n          return of(action);\n        }\n      })\n    );\n\n    // Listen for unlifted actions\n    const actions$ = changes$.pipe(\n      filter(change => change.type === ExtensionActionTypes.ACTION),\n      map(change => this.unwrapAction(change.payload))\n    );\n\n    const actionsUntilStop$ = actions$.pipe(takeUntil(stop$));\n    const liftedUntilStop$ = liftedActions$.pipe(takeUntil(stop$));\n    this.start$ = start$.pipe(takeUntil(stop$));\n\n    // Only take the action sources between the start/stop events\n    this.actions$ = this.start$.pipe(switchMap(() => actionsUntilStop$));\n    this.liftedActions$ = this.start$.pipe(switchMap(() => liftedUntilStop$));\n  }\n\n  private unwrapAction(action: Action) {\n    return typeof action === 'string' ? eval(`(${action})`) : action;\n  }\n\n  private getExtensionConfig(config: StoreDevtoolsConfig) {\n    const extensionOptions: ReduxDevtoolsExtensionConfig = {\n      name: config.name,\n      features: config.features,\n      serialize: config.serialize,\n      // The action/state sanitizers are not added to the config\n      // because sanitation is done in this class already.\n      // It is done before sending it to the devtools extension for consistency:\n      // - If we call extensionConnection.send(...),\n      //   the extension would call the sanitizers.\n      // - If we call devtoolsExtension.send(...) (aka full state update),\n      //   the extension would NOT call the sanitizers, so we have to do it ourselves.\n    };\n    if (config.maxAge !== false /* support === 0 */) {\n      extensionOptions.maxAge = config.maxAge;\n    }\n    return extensionOptions;\n  }\n\n  private sendToReduxDevtools(send: Function) {\n    try {\n      send();\n    } catch (err) {\n      console.warn(\n        '@ngrx/store-devtools: something went wrong inside the redux devtools',\n        err\n      );\n    }\n  }\n}\n","import { ErrorHandler } from '@angular/core';\nimport { Action, ActionReducer, UPDATE, INIT } from '@ngrx/store';\n\nimport { difference, liftAction, isActionFiltered } from './utils';\nimport * as DevtoolsActions from './actions';\nimport { StoreDevtoolsConfig } from './config';\nimport { PerformAction } from './actions';\n\nexport type InitAction = {\n  readonly type: typeof INIT;\n};\n\nexport type UpdateReducerAction = {\n  readonly type: typeof UPDATE;\n};\n\nexport type CoreActions = InitAction | UpdateReducerAction;\nexport type Actions = DevtoolsActions.All | CoreActions;\n\nexport const INIT_ACTION = { type: INIT };\n\nexport const RECOMPUTE = '@ngrx/store-devtools/recompute' as '@ngrx/store-devtools/recompute';\nexport const RECOMPUTE_ACTION = { type: RECOMPUTE };\n\nexport interface ComputedState {\n  state: any;\n  error: any;\n}\n\nexport interface LiftedAction {\n  type: string;\n  action: Action;\n}\n\nexport interface LiftedActions {\n  [id: number]: LiftedAction;\n}\n\nexport interface LiftedState {\n  monitorState: any;\n  nextActionId: number;\n  actionsById: LiftedActions;\n  stagedActionIds: number[];\n  skippedActionIds: number[];\n  committedState: any;\n  currentStateIndex: number;\n  computedStates: ComputedState[];\n  isLocked: boolean;\n  isPaused: boolean;\n}\n\n/**\n * Computes the next entry in the log by applying an action.\n */\nfunction computeNextEntry(\n  reducer: ActionReducer<any, any>,\n  action: Action,\n  state: any,\n  error: any,\n  errorHandler: ErrorHandler\n) {\n  if (error) {\n    return {\n      state,\n      error: 'Interrupted by an error up the chain',\n    };\n  }\n\n  let nextState = state;\n  let nextError;\n  try {\n    nextState = reducer(state, action);\n  } catch (err) {\n    nextError = err.toString();\n    errorHandler.handleError(err.stack || err);\n  }\n\n  return {\n    state: nextState,\n    error: nextError,\n  };\n}\n\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n */\nfunction recomputeStates(\n  computedStates: ComputedState[],\n  minInvalidatedStateIndex: number,\n  reducer: ActionReducer<any, any>,\n  committedState: any,\n  actionsById: LiftedActions,\n  stagedActionIds: number[],\n  skippedActionIds: number[],\n  errorHandler: ErrorHandler,\n  isPaused: boolean\n) {\n  // Optimization: exit early and return the same reference\n  // if we know nothing could have changed.\n  if (\n    minInvalidatedStateIndex >= computedStates.length &&\n    computedStates.length === stagedActionIds.length\n  ) {\n    return computedStates;\n  }\n\n  const nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n  // If the recording is paused, recompute all states up until the pause state,\n  // else recompute all states.\n  const lastIncludedActionId = stagedActionIds.length - (isPaused ? 1 : 0);\n  for (let i = minInvalidatedStateIndex; i < lastIncludedActionId; i++) {\n    const actionId = stagedActionIds[i];\n    const action = actionsById[actionId].action;\n\n    const previousEntry = nextComputedStates[i - 1];\n    const previousState = previousEntry ? previousEntry.state : committedState;\n    const previousError = previousEntry ? previousEntry.error : undefined;\n\n    const shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n    const entry: ComputedState = shouldSkip\n      ? previousEntry\n      : computeNextEntry(\n          reducer,\n          action,\n          previousState,\n          previousError,\n          errorHandler\n        );\n\n    nextComputedStates.push(entry);\n  }\n  // If the recording is paused, the last state will not be recomputed,\n  // because it's essentially not part of the state history.\n  if (isPaused) {\n    nextComputedStates.push(computedStates[computedStates.length - 1]);\n  }\n\n  return nextComputedStates;\n}\n\nexport function liftInitialState(\n  initialCommittedState?: any,\n  monitorReducer?: any\n): LiftedState {\n  return {\n    monitorState: monitorReducer(undefined, {}),\n    nextActionId: 1,\n    actionsById: { 0: liftAction(INIT_ACTION) },\n    stagedActionIds: [0],\n    skippedActionIds: [],\n    committedState: initialCommittedState,\n    currentStateIndex: 0,\n    computedStates: [],\n    isLocked: false,\n    isPaused: false,\n  };\n}\n\n/**\n * Creates a history state reducer from an app's reducer.\n */\nexport function liftReducerWith(\n  initialCommittedState: any,\n  initialLiftedState: LiftedState,\n  errorHandler: ErrorHandler,\n  monitorReducer?: any,\n  options: Partial<StoreDevtoolsConfig> = {}\n) {\n  /**\n   * Manages how the history actions modify the history state.\n   */\n  return (\n    reducer: ActionReducer<any, any>\n  ): ActionReducer<LiftedState, Actions> => (liftedState, liftedAction) => {\n    let {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n      isLocked,\n      isPaused,\n    } =\n      liftedState || initialLiftedState;\n\n    if (!liftedState) {\n      // Prevent mutating initialLiftedState\n      actionsById = Object.create(actionsById);\n    }\n\n    function commitExcessActions(n: number) {\n      // Auto-commits n-number of excess actions.\n      let excess = n;\n      let idsToDelete = stagedActionIds.slice(1, excess + 1);\n\n      for (let i = 0; i < idsToDelete.length; i++) {\n        if (computedStates[i + 1].error) {\n          // Stop if error is found. Commit actions up to error.\n          excess = i;\n          idsToDelete = stagedActionIds.slice(1, excess + 1);\n          break;\n        } else {\n          delete actionsById[idsToDelete[i]];\n        }\n      }\n\n      skippedActionIds = skippedActionIds.filter(\n        id => idsToDelete.indexOf(id) === -1\n      );\n      stagedActionIds = [0, ...stagedActionIds.slice(excess + 1)];\n      committedState = computedStates[excess].state;\n      computedStates = computedStates.slice(excess);\n      currentStateIndex =\n        currentStateIndex > excess ? currentStateIndex - excess : 0;\n    }\n\n    function commitChanges() {\n      // Consider the last committed state the new starting point.\n      // Squash any staged actions into a single committed state.\n      actionsById = { 0: liftAction(INIT_ACTION) };\n      nextActionId = 1;\n      stagedActionIds = [0];\n      skippedActionIds = [];\n      committedState = computedStates[currentStateIndex].state;\n      currentStateIndex = 0;\n      computedStates = [];\n    }\n\n    // By default, aggressively recompute every state whatever happens.\n    // This has O(n) performance, so we'll override this to a sensible\n    // value whenever we feel like we don't have to recompute the states.\n    let minInvalidatedStateIndex = 0;\n\n    switch (liftedAction.type) {\n      case DevtoolsActions.LOCK_CHANGES: {\n        isLocked = liftedAction.status;\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n      case DevtoolsActions.PAUSE_RECORDING: {\n        isPaused = liftedAction.status;\n        if (isPaused) {\n          // Add a pause action to signal the devtools-user the recording is paused.\n          // The corresponding state will be overwritten on each update to always contain\n          // the latest state (see Actions.PERFORM_ACTION).\n          stagedActionIds = [...stagedActionIds, nextActionId];\n          actionsById[nextActionId] = new PerformAction(\n            {\n              type: '@ngrx/devtools/pause',\n            },\n            +Date.now()\n          );\n          nextActionId++;\n          minInvalidatedStateIndex = stagedActionIds.length - 1;\n          computedStates = computedStates.concat(\n            computedStates[computedStates.length - 1]\n          );\n\n          if (currentStateIndex === stagedActionIds.length - 2) {\n            currentStateIndex++;\n          }\n          minInvalidatedStateIndex = Infinity;\n        } else {\n          commitChanges();\n        }\n        break;\n      }\n      case DevtoolsActions.RESET: {\n        // Get back to the state the store was created with.\n        actionsById = { 0: liftAction(INIT_ACTION) };\n        nextActionId = 1;\n        stagedActionIds = [0];\n        skippedActionIds = [];\n        committedState = initialCommittedState;\n        currentStateIndex = 0;\n        computedStates = [];\n        break;\n      }\n      case DevtoolsActions.COMMIT: {\n        commitChanges();\n        break;\n      }\n      case DevtoolsActions.ROLLBACK: {\n        // Forget about any staged actions.\n        // Start again from the last committed state.\n        actionsById = { 0: liftAction(INIT_ACTION) };\n        nextActionId = 1;\n        stagedActionIds = [0];\n        skippedActionIds = [];\n        currentStateIndex = 0;\n        computedStates = [];\n        break;\n      }\n      case DevtoolsActions.TOGGLE_ACTION: {\n        // Toggle whether an action with given ID is skipped.\n        // Being skipped means it is a no-op during the computation.\n        const { id: actionId } = liftedAction;\n        const index = skippedActionIds.indexOf(actionId);\n        if (index === -1) {\n          skippedActionIds = [actionId, ...skippedActionIds];\n        } else {\n          skippedActionIds = skippedActionIds.filter(id => id !== actionId);\n        }\n        // Optimization: we know history before this action hasn't changed\n        minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);\n        break;\n      }\n      case DevtoolsActions.SET_ACTIONS_ACTIVE: {\n        // Toggle whether an action with given ID is skipped.\n        // Being skipped means it is a no-op during the computation.\n        const { start, end, active } = liftedAction;\n        const actionIds = [];\n        for (let i = start; i < end; i++) actionIds.push(i);\n        if (active) {\n          skippedActionIds = difference(skippedActionIds, actionIds);\n        } else {\n          skippedActionIds = [...skippedActionIds, ...actionIds];\n        }\n\n        // Optimization: we know history before this action hasn't changed\n        minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n        break;\n      }\n      case DevtoolsActions.JUMP_TO_STATE: {\n        // Without recomputing anything, move the pointer that tell us\n        // which state is considered the current one. Useful for sliders.\n        currentStateIndex = liftedAction.index;\n        // Optimization: we know the history has not changed.\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n      case DevtoolsActions.JUMP_TO_ACTION: {\n        // Jumps to a corresponding state to a specific action.\n        // Useful when filtering actions.\n        const index = stagedActionIds.indexOf(liftedAction.actionId);\n        if (index !== -1) currentStateIndex = index;\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n      case DevtoolsActions.SWEEP: {\n        // Forget any actions that are currently being skipped.\n        stagedActionIds = difference(stagedActionIds, skippedActionIds);\n        skippedActionIds = [];\n        currentStateIndex = Math.min(\n          currentStateIndex,\n          stagedActionIds.length - 1\n        );\n        break;\n      }\n      case DevtoolsActions.PERFORM_ACTION: {\n        // Ignore action and return state as is if recording is locked\n        if (isLocked) {\n          return liftedState || initialLiftedState;\n        }\n\n        if (\n          isPaused ||\n          (liftedState &&\n            isActionFiltered(\n              liftedState.computedStates[currentStateIndex],\n              liftedAction,\n              options.predicate,\n              options.actionsSafelist,\n              options.actionsBlocklist\n            ))\n        ) {\n          // If recording is paused or if the action should be ignored, overwrite the last state\n          // (corresponds to the pause action) and keep everything else as is.\n          // This way, the app gets the new current state while the devtools\n          // do not record another action.\n          const lastState = computedStates[computedStates.length - 1];\n          computedStates = [\n            ...computedStates.slice(0, -1),\n            computeNextEntry(\n              reducer,\n              liftedAction.action,\n              lastState.state,\n              lastState.error,\n              errorHandler\n            ),\n          ];\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n\n        // Auto-commit as new actions come in.\n        if (options.maxAge && stagedActionIds.length === options.maxAge) {\n          commitExcessActions(1);\n        }\n\n        if (currentStateIndex === stagedActionIds.length - 1) {\n          currentStateIndex++;\n        }\n        const actionId = nextActionId++;\n        // Mutation! This is the hottest path, and we optimize on purpose.\n        // It is safe because we set a new key in a cache dictionary.\n        actionsById[actionId] = liftedAction;\n\n        stagedActionIds = [...stagedActionIds, actionId];\n        // Optimization: we know that only the new action needs computing.\n        minInvalidatedStateIndex = stagedActionIds.length - 1;\n        break;\n      }\n      case DevtoolsActions.IMPORT_STATE: {\n        // Completely replace everything.\n        ({\n          monitorState,\n          actionsById,\n          nextActionId,\n          stagedActionIds,\n          skippedActionIds,\n          committedState,\n          currentStateIndex,\n          computedStates,\n          isLocked,\n          // prettier-ignore\n          isPaused\n        } = liftedAction.nextLiftedState);\n        break;\n      }\n      case INIT: {\n        // Always recompute states on hot reload and init.\n        minInvalidatedStateIndex = 0;\n\n        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n          // States must be recomputed before committing excess.\n          computedStates = recomputeStates(\n            computedStates,\n            minInvalidatedStateIndex,\n            reducer,\n            committedState,\n            actionsById,\n            stagedActionIds,\n            skippedActionIds,\n            errorHandler,\n            isPaused\n          );\n\n          commitExcessActions(stagedActionIds.length - options.maxAge);\n\n          // Avoid double computation.\n          minInvalidatedStateIndex = Infinity;\n        }\n\n        break;\n      }\n      case UPDATE: {\n        const stateHasErrors =\n          computedStates.filter(state => state.error).length > 0;\n\n        if (stateHasErrors) {\n          // Recompute all states\n          minInvalidatedStateIndex = 0;\n\n          if (options.maxAge && stagedActionIds.length > options.maxAge) {\n            // States must be recomputed before committing excess.\n            computedStates = recomputeStates(\n              computedStates,\n              minInvalidatedStateIndex,\n              reducer,\n              committedState,\n              actionsById,\n              stagedActionIds,\n              skippedActionIds,\n              errorHandler,\n              isPaused\n            );\n\n            commitExcessActions(stagedActionIds.length - options.maxAge);\n\n            // Avoid double computation.\n            minInvalidatedStateIndex = Infinity;\n          }\n        } else {\n          // If not paused/locked, add a new action to signal devtools-user\n          // that there was a reducer update.\n          if (!isPaused && !isLocked) {\n            if (currentStateIndex === stagedActionIds.length - 1) {\n              currentStateIndex++;\n            }\n\n            // Add a new action to only recompute state\n            const actionId = nextActionId++;\n            actionsById[actionId] = new PerformAction(\n              liftedAction,\n              +Date.now()\n            );\n            stagedActionIds = [...stagedActionIds, actionId];\n\n            minInvalidatedStateIndex = stagedActionIds.length - 1;\n\n            computedStates = recomputeStates(\n              computedStates,\n              minInvalidatedStateIndex,\n              reducer,\n              committedState,\n              actionsById,\n              stagedActionIds,\n              skippedActionIds,\n              errorHandler,\n              isPaused\n            );\n          }\n\n          // Recompute state history with latest reducer and update action\n          computedStates = computedStates.map(cmp => ({\n            ...cmp,\n            state: reducer(cmp.state, RECOMPUTE_ACTION),\n          }));\n\n          currentStateIndex = stagedActionIds.length - 1;\n\n          if (options.maxAge && stagedActionIds.length > options.maxAge) {\n            commitExcessActions(stagedActionIds.length - options.maxAge);\n          }\n\n          // Avoid double computation.\n          minInvalidatedStateIndex = Infinity;\n        }\n\n        break;\n      }\n      default: {\n        // If the action is not recognized, it's a monitor action.\n        // Optimization: a monitor action can't change history.\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n    }\n\n    computedStates = recomputeStates(\n      computedStates,\n      minInvalidatedStateIndex,\n      reducer,\n      committedState,\n      actionsById,\n      stagedActionIds,\n      skippedActionIds,\n      errorHandler,\n      isPaused\n    );\n    monitorState = monitorReducer(monitorState, liftedAction);\n\n    return {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n      isLocked,\n      isPaused,\n    };\n  };\n}\n","import { Injectable, Inject, ErrorHandler } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionsSubject,\n  INITIAL_STATE,\n  ReducerObservable,\n  ScannedActionsSubject,\n} from '@ngrx/store';\nimport {\n  merge,\n  Observable,\n  Observer,\n  queueScheduler,\n  ReplaySubject,\n  Subscription,\n} from 'rxjs';\nimport { map, observeOn, scan, skip, withLatestFrom } from 'rxjs/operators';\n\nimport * as Actions from './actions';\nimport { STORE_DEVTOOLS_CONFIG, StoreDevtoolsConfig } from './config';\nimport { DevtoolsExtension } from './extension';\nimport { LiftedState, liftInitialState, liftReducerWith } from './reducer';\nimport {\n  liftAction,\n  unliftState,\n  shouldFilterActions,\n  filterLiftedState,\n} from './utils';\nimport { DevtoolsDispatcher } from './devtools-dispatcher';\nimport { PERFORM_ACTION } from './actions';\n\n@Injectable()\nexport class StoreDevtools implements Observer<any> {\n  private stateSubscription: Subscription;\n  private extensionStartSubscription: Subscription;\n  public dispatcher: ActionsSubject;\n  public liftedState: Observable<LiftedState>;\n  public state: Observable<any>;\n\n  constructor(\n    dispatcher: DevtoolsDispatcher,\n    actions$: ActionsSubject,\n    reducers$: ReducerObservable,\n    extension: DevtoolsExtension,\n    scannedActions: ScannedActionsSubject,\n    errorHandler: ErrorHandler,\n    @Inject(INITIAL_STATE) initialState: any,\n    @Inject(STORE_DEVTOOLS_CONFIG) config: StoreDevtoolsConfig\n  ) {\n    const liftedInitialState = liftInitialState(initialState, config.monitor);\n    const liftReducer = liftReducerWith(\n      initialState,\n      liftedInitialState,\n      errorHandler,\n      config.monitor,\n      config\n    );\n\n    const liftedAction$ = merge(\n      merge(actions$.asObservable().pipe(skip(1)), extension.actions$).pipe(\n        map(liftAction)\n      ),\n      dispatcher,\n      extension.liftedActions$\n    ).pipe(observeOn(queueScheduler));\n\n    const liftedReducer$ = reducers$.pipe(map(liftReducer));\n\n    const liftedStateSubject = new ReplaySubject<LiftedState>(1);\n\n    const liftedStateSubscription = liftedAction$\n      .pipe(\n        withLatestFrom(liftedReducer$),\n        scan<\n          [any, ActionReducer<LiftedState, Actions.All>],\n          {\n            state: LiftedState;\n            action: any;\n          }\n        >(\n          ({ state: liftedState }, [action, reducer]) => {\n            let reducedLiftedState = reducer(liftedState, action);\n            // On full state update\n            // If we have actions filters, we must filter completely our lifted state to be sync with the extension\n            if (action.type !== PERFORM_ACTION && shouldFilterActions(config)) {\n              reducedLiftedState = filterLiftedState(\n                reducedLiftedState,\n                config.predicate,\n                config.actionsSafelist,\n                config.actionsBlocklist\n              );\n            }\n            // Extension should be sent the sanitized lifted state\n            extension.notify(action, reducedLiftedState);\n            return { state: reducedLiftedState, action };\n          },\n          { state: liftedInitialState, action: null as any }\n        )\n      )\n      .subscribe(({ state, action }) => {\n        liftedStateSubject.next(state);\n\n        if (action.type === Actions.PERFORM_ACTION) {\n          const unliftedAction = (action as Actions.PerformAction).action;\n\n          scannedActions.next(unliftedAction);\n        }\n      });\n\n    const extensionStartSubscription = extension.start$.subscribe(() => {\n      this.refresh();\n    });\n\n    const liftedState$ = liftedStateSubject.asObservable() as Observable<\n      LiftedState\n    >;\n    const state$ = liftedState$.pipe(map(unliftState));\n\n    this.extensionStartSubscription = extensionStartSubscription;\n    this.stateSubscription = liftedStateSubscription;\n    this.dispatcher = dispatcher;\n    this.liftedState = liftedState$;\n    this.state = state$;\n  }\n\n  dispatch(action: Action) {\n    this.dispatcher.next(action);\n  }\n\n  next(action: any) {\n    this.dispatcher.next(action);\n  }\n\n  error(error: any) {}\n\n  complete() {}\n\n  performAction(action: any) {\n    this.dispatch(new Actions.PerformAction(action, +Date.now()));\n  }\n\n  refresh() {\n    this.dispatch(new Actions.Refresh());\n  }\n\n  reset() {\n    this.dispatch(new Actions.Reset(+Date.now()));\n  }\n\n  rollback() {\n    this.dispatch(new Actions.Rollback(+Date.now()));\n  }\n\n  commit() {\n    this.dispatch(new Actions.Commit(+Date.now()));\n  }\n\n  sweep() {\n    this.dispatch(new Actions.Sweep());\n  }\n\n  toggleAction(id: number) {\n    this.dispatch(new Actions.ToggleAction(id));\n  }\n\n  jumpToAction(actionId: number) {\n    this.dispatch(new Actions.JumpToAction(actionId));\n  }\n\n  jumpToState(index: number) {\n    this.dispatch(new Actions.JumpToState(index));\n  }\n\n  importState(nextLiftedState: any) {\n    this.dispatch(new Actions.ImportState(nextLiftedState));\n  }\n\n  lockChanges(status: boolean) {\n    this.dispatch(new Actions.LockChanges(status));\n  }\n\n  pauseRecording(status: boolean) {\n    this.dispatch(new Actions.PauseRecording(status));\n  }\n}\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReducerManagerDispatcher, StateObservable } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport {\n  INITIAL_OPTIONS,\n  STORE_DEVTOOLS_CONFIG,\n  StoreDevtoolsConfig,\n  StoreDevtoolsOptions,\n  noMonitor,\n  createConfig,\n} from './config';\nimport { StoreDevtools } from './devtools';\nimport {\n  DevtoolsExtension,\n  REDUX_DEVTOOLS_EXTENSION,\n  ReduxDevtoolsExtension,\n} from './extension';\nimport { DevtoolsDispatcher } from './devtools-dispatcher';\n\nexport const IS_EXTENSION_OR_MONITOR_PRESENT = new InjectionToken<boolean>(\n  'Is Devtools Extension or Monitor Present'\n);\n\nexport function createIsExtensionOrMonitorPresent(\n  extension: ReduxDevtoolsExtension | null,\n  config: StoreDevtoolsConfig\n) {\n  return Boolean(extension) || config.monitor !== noMonitor;\n}\n\nexport function createReduxDevtoolsExtension() {\n  const extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n\n  if (\n    typeof window === 'object' &&\n    typeof (window as any)[extensionKey] !== 'undefined'\n  ) {\n    return (window as any)[extensionKey];\n  } else {\n    return null;\n  }\n}\n\nexport function createStateObservable(\n  devtools: StoreDevtools\n): Observable<any> {\n  return devtools.state;\n}\n\n@NgModule({})\nexport class StoreDevtoolsModule {\n  static instrument(\n    options: StoreDevtoolsOptions = {}\n  ): ModuleWithProviders<StoreDevtoolsModule> {\n    return {\n      ngModule: StoreDevtoolsModule,\n      providers: [\n        DevtoolsExtension,\n        DevtoolsDispatcher,\n        StoreDevtools,\n        {\n          provide: INITIAL_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n          deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n          useFactory: createIsExtensionOrMonitorPresent,\n        },\n        {\n          provide: REDUX_DEVTOOLS_EXTENSION,\n          useFactory: createReduxDevtoolsExtension,\n        },\n        {\n          provide: STORE_DEVTOOLS_CONFIG,\n          deps: [INITIAL_OPTIONS],\n          useFactory: createConfig,\n        },\n        {\n          provide: StateObservable,\n          deps: [StoreDevtools],\n          useFactory: createStateObservable,\n        },\n        {\n          provide: ReducerManagerDispatcher,\n          useExisting: DevtoolsDispatcher,\n        },\n      ],\n    };\n  }\n}\n","/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {STORE_DEVTOOLS_CONFIG as Éµngrx_modules_store_devtools_store_devtools_e,createConfig as Éµngrx_modules_store_devtools_store_devtools_g,noMonitor as Éµngrx_modules_store_devtools_store_devtools_f} from './src/config';\nexport {DevtoolsDispatcher as Éµngrx_modules_store_devtools_store_devtools_j} from './src/devtools-dispatcher';\nexport {DevtoolsExtension as Éµngrx_modules_store_devtools_store_devtools_i,REDUX_DEVTOOLS_EXTENSION as Éµngrx_modules_store_devtools_store_devtools_h} from './src/extension';\nexport {IS_EXTENSION_OR_MONITOR_PRESENT as Éµngrx_modules_store_devtools_store_devtools_a,createIsExtensionOrMonitorPresent as Éµngrx_modules_store_devtools_store_devtools_b,createReduxDevtoolsExtension as Éµngrx_modules_store_devtools_store_devtools_c,createStateObservable as Éµngrx_modules_store_devtools_store_devtools_d} from './src/instrument';"]}