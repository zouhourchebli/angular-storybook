import { __decorate, __metadata, __param } from "tslib";
import { NgModule, Inject, Optional } from '@angular/core';
import { StoreRootModule, StoreFeatureModule } from '@ngrx/store';
import { EffectsRootModule } from './effects_root_module';
import { FEATURE_EFFECTS } from './tokens';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngrx/store';
var EffectsFeatureModule = /** @class */ (function () {
    function EffectsFeatureModule(root, effectSourceGroups, storeRootModule, storeFeatureModule) {
        effectSourceGroups.forEach(function (group) {
            return group.forEach(function (effectSourceInstance) {
                return root.addEffects(effectSourceInstance);
            });
        });
    }
    EffectsFeatureModule = __decorate([ __param(1, Inject(FEATURE_EFFECTS)),
        __param(2, Optional()),
        __param(3, Optional()),
        __metadata("design:paramtypes", [EffectsRootModule, Array, StoreRootModule,
            StoreFeatureModule])
    ], EffectsFeatureModule);
EffectsFeatureModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: EffectsFeatureModule });
EffectsFeatureModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function EffectsFeatureModule_Factory(t) { return new (t || EffectsFeatureModule)(ɵngcc0.ɵɵinject(EffectsRootModule), ɵngcc0.ɵɵinject(FEATURE_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc1.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc1.StoreFeatureModule, 8)); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EffectsFeatureModule, [{
        type: NgModule,
        args: [{}]
    }], function () { return [{ type: EffectsRootModule }, { type: Array, decorators: [{
                type: Inject,
                args: [FEATURE_EFFECTS]
            }] }, { type: ɵngcc1.StoreRootModule, decorators: [{
                type: Optional
            }] }, { type: ɵngcc1.StoreFeatureModule, decorators: [{
                type: Optional
            }] }]; }, null); })();
    return EffectsFeatureModule;
}());
export { EffectsFeatureModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWZmZWN0c19mZWF0dXJlX21vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9lZmZlY3RzL3NyYy9lZmZlY3RzX2ZlYXR1cmVfbW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sVUFBVSxDQUFDOzs7QUFHM0M7QUFFSyxJQURILDhCQUNFLElBQXVCLEVBQ0Usa0JBQTJCLEVBQ3hDLGVBQWdDLEVBQ2hDLGtCQUFzQztBQUNuRCxRQUNDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxVQUFBLEtBQUs7QUFDcEMsWUFBTSxPQUFBLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBQSxvQkFBb0I7QUFDeEMsZ0JBQVEsT0FBQSxJQUFJLENBQUMsVUFBVSxDQUFDLG9CQUFvQixDQUFDO0FBQzVDLFlBRE8sQ0FBcUMsQ0FDdEM7QUFDTixRQUhLLENBRUMsQ0FDRixDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0gsSUFiYSxvQkFBb0Isd0JBRGhDLFFBQVEsQ0FBQyxFQUFFLENBQUMsckJBQ0wsQ0FHSCxXQUFBLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQTtBQUFFLFFBQ3pCLFdBQUEsUUFBUSxFQUFFLENBQUE7QUFBRSxRQUNaLFdBQUEsUUFBUSxFQUFFLENBQUE7QUFBRSx5Q0FIUCxpQkFBaUIsU0FFTSxlQUFlO0FBQ2hELFlBQW9DLGtCQUFrQjtBQUNwRCxPQU5XLG9CQUFvQixDQWFoQzs7Ozs7Ozs7Ozs7OztrQ0FDRDtBQUFDLElBREQsMkJBQUM7QUFDQSxDQURBLEFBYkQsSUFhQztBQUNELFNBZGEsb0JBQW9CO0FBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIEluamVjdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN0b3JlUm9vdE1vZHVsZSwgU3RvcmVGZWF0dXJlTW9kdWxlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgRWZmZWN0c1Jvb3RNb2R1bGUgfSBmcm9tICcuL2VmZmVjdHNfcm9vdF9tb2R1bGUnO1xuaW1wb3J0IHsgRkVBVFVSRV9FRkZFQ1RTIH0gZnJvbSAnLi90b2tlbnMnO1xuXG5ATmdNb2R1bGUoe30pXG5leHBvcnQgY2xhc3MgRWZmZWN0c0ZlYXR1cmVNb2R1bGUge1xuICBjb25zdHJ1Y3RvcihcbiAgICByb290OiBFZmZlY3RzUm9vdE1vZHVsZSxcbiAgICBASW5qZWN0KEZFQVRVUkVfRUZGRUNUUykgZWZmZWN0U291cmNlR3JvdXBzOiBhbnlbXVtdLFxuICAgIEBPcHRpb25hbCgpIHN0b3JlUm9vdE1vZHVsZTogU3RvcmVSb290TW9kdWxlLFxuICAgIEBPcHRpb25hbCgpIHN0b3JlRmVhdHVyZU1vZHVsZTogU3RvcmVGZWF0dXJlTW9kdWxlXG4gICkge1xuICAgIGVmZmVjdFNvdXJjZUdyb3Vwcy5mb3JFYWNoKGdyb3VwID0+XG4gICAgICBncm91cC5mb3JFYWNoKGVmZmVjdFNvdXJjZUluc3RhbmNlID0+XG4gICAgICAgIHJvb3QuYWRkRWZmZWN0cyhlZmZlY3RTb3VyY2VJbnN0YW5jZSlcbiAgICAgIClcbiAgICApO1xuICB9XG59XG4iXX0=